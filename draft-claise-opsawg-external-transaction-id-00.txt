



NETMOD                                                         B. Claise
Internet-Draft                                               J. Quilbeuf
Intended status: Standards Track                                  Huawei
Expires: November 17, 2022                                   J. Lindblad
                                                           Cisco Systems
                                                            May 16, 2022


           External Transaction ID for Configuration Changes
             draft-claise-netmod-external-transaction-id-00

Abstract

   Network equipements are often configured by a variety of network
   management systems (NMS), protocols and people.  Each NMS might have
   its own task to perform and these taks can overlap, leading to two
   different NMS reverting each other modifications on the same network
   equipement.  Also, the configuration pushed by an NMS can be modified
   by an engineer or some protocol.  In turn, this can bring services
   down and desynchronize NMSs from their managed network equipement.
   We propose a mechanism to map the configuration modifications their
   source, up to the service request in the case of NMSs.  Such a
   mechansims would facilitate the troubleshooting and post morterm
   analysis.  Also, in case of more automated systems, the system could
   automatically identify two conflicting service request, find a
   solution to the conflict and close the loop by sending new
   instructions to the conflicting NMSs.  This draft proposes a new YANG
   model to log all the configuration changes.  In the context of
   NETCONF, with compatible NMS, the model would also contain a
   reference provided by the NMS itself, to map back to the service
   request.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on November 17, 2022.



Claise, et al.          Expires November 17, 2022               [Page 1]

Internet-Draft           External Transaction ID                May 2022


Copyright Notice

   Copyright (c) 2022 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   3.  YANG Module . . . . . . . . . . . . . . . . . . . . . . . . .   4
     3.1.  Overview  . . . . . . . . . . . . . . . . . . . . . . . .   4
     3.2.  YANG module ietf-external-transaction-id  . . . . . . . .   5
   4.  Security Considerations . . . . . . . . . . . . . . . . . . .   7
   5.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   7
   6.  Contributors  . . . . . . . . . . . . . . . . . . . . . . . .   7
   7.  Open Issues . . . . . . . . . . . . . . . . . . . . . . . . .   7
   8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   7
     8.1.  Normative References  . . . . . . . . . . . . . . . . . .   7
     8.2.  Informative References  . . . . . . . . . . . . . . . . .   8
   Appendix A.  Changes between revisions  . . . . . . . . . . . . .   8
   Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .   8
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .   8

1.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

2.  Introduction

   This draft focuses on cases where the network is configured by
   several NMS that use NETCONF [RFC6241] to update the configuration of
   the device.  For instance, a network service orchestrator might
   receive on its northbound interface a service request to create a new
   service instance, following a service model [RFC8309] described using



Claise, et al.          Expires November 17, 2022               [Page 2]

Internet-Draft           External Transaction ID                May 2022


   YANG [RFC6020].  The orchestrator will then use NETCONF, as a client,
   to push the configuration needed to create the service.  The
   configured network elements, which act as NETCONF servers, are likely
   to keep track of the modification as part of the commit history.
   However, the only information available about the configuration
   change is the username of the account that triggered the change.  In
   particular, the source of the modification is not available.

   In most cases, there isn't a single NMS configuring all the devices.
   Usually, engineer can log in directly to devices to modify the
   configuration.  Some protcols can also alter the configuration.
   Finally, there are cases where several NMSs are concurently
   configuring the devices.

   When several NMSs are used to configure the network, the same network
   element or NETCONF server can be configured by different NMSs or
   NETCONF server.  In that case, the configuration or services
   configured by the first client might be impacted by the configuration
   pushed by the second client.  That impact is not always easy to
   detect, especially if the first client is not aware of the
   modification done by the second client and thus is in a correct state
   internally.  Troubleshooting such systems might be involved.  In the
   best case, there is a dedicated user for each client and the
   timestamp of the modification allows to find the reason why the
   second client did the modification.  In the worst case, everything is
   done by the same user and some more tricks must be done to identify
   the source of the second modification.

   In order to enable automation, we need to be able to automatically
   detect such conflicts, analyze their cause and automatically
   arbitrate them at a highest level.  While arbitration is outside of
   the scope of this draft, finding out why the two NMSs are in conflict
   and possibly finding conflicting service requests is a good use case
   for this draft.  This requires mapping the changes seen on the
   devices to changes seen on the NMSs.

   In [I-D.lindblad-netconf-transaction-id], the concept of a NETCONF
   transaction ID is proposed.  The goal of this draft is to speed up
   the re-synchronization process between a client and a server, by
   using a common transaction ID.  If the current transaction ID on the
   server is the same as the last one known by the client, then both are
   synchronized.  Else the client can request the diff from the latest
   transaction ID it knows.  In our case, the transaction ID could be
   use to make the link between the changes done on the server and the
   need for these changes .

   Our proposed solution is to log every configuration modification.
   Along with the modification, we also log, when available, the



Claise, et al.          Expires November 17, 2022               [Page 3]

Internet-Draft           External Transaction ID                May 2022


   information needed to retrieve both the client and the reference for
   that transaction sent by the client.  If the client is a NMS, the
   request sent by the client might have been for the instantiation or
   modification of a new service.  In the end, when such a conflict is
   detected, we could identify the two conflicting requests and present
   them to the operator or to the automation framework.

3.  YANG Module

   We present in this section the YANG module for modelling the
   information about the configuration modifications.

3.1.  Overview

   The tree representation [RFC8340] of our YANG module is depicted in
   Figure 1

   module: ietf-external-transaction-id
     +--ro configuration-changes
        +--ro configuration-change* [local-commit-id]
           +--ro local-commit-id            string
           +--ro username                   string
           +--ro timestamp                  yang:date-and-time
           +--ro external-transaction-id?   ietf-netconf-txid:etag-t
           +--ro client-id?                 string


    Figure 1: Tree representation of ietf-external-transaction-id YANG
                                  module

   The local-commit-id represent the local id of the configuration
   changes.  It can be used to retrieve the local configuration changes
   that happend during that transaction.

   The username and timestamp are mandatory and must contain the local
   username that triggered the configuration change and the date at
   which this modification occurred.

   The external-transaction-id is the id for the client of the
   transaction that lead to the changes in local-commit-id.  The client-
   id shoud identify the client that triggered the changes.  Both fields
   are optional and should be filled when the client supports it.

   With both the client-id and the external-transaction-id, a human or a
   program should be able to find the source of the transaction.  For
   instance, if the client is a network service orchestrator, the source
   of the transaction could be a service request.




Claise, et al.          Expires November 17, 2022               [Page 4]

Internet-Draft           External Transaction ID                May 2022


   Q?  Should we include the transition ID as a reference ? Do we target
   earlier adoption even in the full mechansim described in
   [I-D.lindblad-netconf-transaction-id] is not supported by the device
   ?

3.2.  YANG module ietf-external-transaction-id

   <CODE BEGINS> file "ietf-external-transaction-id@2021-11-03.yang"

   module ietf-external-transaction-id {
     yang-version 1.1;
     namespace
       "urn:ietf:params:xml:ns:yang:ietf-external-transaction-id";
     prefix ext-txid;

     import ietf-yang-types {
       prefix yang;
       reference
         "RFC 6991: Common YANG Data Types";
     }
     import ietf-netconf-txid {
       prefix ietf-netconf-txid;
     }

     organization
       "IETF OPSAWG Working Group";
     contact
       "WG Web:   <https://datatracker.ietf.org/wg/opsawg/>
        WG List:  <mailto:opsawg@ietf.org>
        Author:   Benoit Claise  <mailto:benoit.claise@huawei.com>
        Author:   Jean Quilbeuf  <mailto:jean.quilbeuf@huawei.com>
        Author:   Jan Linblad    <mailto:jlindbla@cisco.com>";
     description
       "This module  ...

        The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL',
        'SHALL NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED',
        'NOT RECOMMENDED', 'MAY', and 'OPTIONAL' in this document
        are to be interpreted as described in BCP 14 (RFC 2119)
        (RFC 8174) when, and only when, they appear in all
        capitals, as shown here.

        Copyright (c) 2021 IETF Trust and the persons identified as
        authors of the code.  All rights reserved.

        Redistribution and use in source and binary forms, with or
        without modification, is permitted pursuant to, and subject
        to the license terms contained in, the Simplified BSD License



Claise, et al.          Expires November 17, 2022               [Page 5]

Internet-Draft           External Transaction ID                May 2022


        set forth in Section 4.c of the IETF Trust's Legal Provisions
        Relating to IETF Documents
        (https://trustee.ietf.org/license-info).
        This version of this YANG module is part of RFC XXXX; see the
        RFC itself for full legal notices.  ";

     revision 2021-11-03 {
       description
         "Initial revision";
       reference
         "RFC xxxx: Title to be completed";
     }

     container configuration-changes {
       config false;
       description
         "Container for changes in the configuration";
       list configuration-change {
         key "local-commit-id";
         description
           "List of configuration changes, identified by their
            local-commit-id";
         leaf local-commit-id {
           type string;
           description
             "Id as saved by the server. Can be used to retrieve
              the corresponding changes using the server mechanism
              if available.";
         }
         leaf username {
           type string;
           mandatory true;
           description
             "Name of the user that triggered the configuration
              change.";
         }
         leaf timestamp {
           type yang:date-and-time;
           mandatory true;
           description
             "Timestamp of the configuration change";
         }
         leaf external-transaction-id {
           type ietf-netconf-txid:etag-t;
           description
             "External transaction ID, sent by the client. Can be
              used by the client to find out the corresponding
              changes.";



Claise, et al.          Expires November 17, 2022               [Page 6]

Internet-Draft           External Transaction ID                May 2022


         }
         leaf client-id {
           type string;
           description
             "ID of the client doing the modification, to further query
              information about the corresponding change.";
         }
       }
     }
   }

   <CODE ENDS>

4.  Security Considerations

5.  IANA Considerations

   This document includes no request to IANA.

6.  Contributors

7.  Open Issues

   ...

8.  References

8.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC6020]  Bjorklund, M., Ed., "YANG - A Data Modeling Language for
              the Network Configuration Protocol (NETCONF)", RFC 6020,
              DOI 10.17487/RFC6020, October 2010,
              <https://www.rfc-editor.org/info/rfc6020>.

   [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,
              and A. Bierman, Ed., "Network Configuration Protocol
              (NETCONF)", RFC 6241, DOI 10.17487/RFC6241, June 2011,
              <https://www.rfc-editor.org/info/rfc6241>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.




Claise, et al.          Expires November 17, 2022               [Page 7]

Internet-Draft           External Transaction ID                May 2022


   [RFC8340]  Bjorklund, M. and L. Berger, Ed., "YANG Tree Diagrams",
              BCP 215, RFC 8340, DOI 10.17487/RFC8340, March 2018,
              <https://www.rfc-editor.org/info/rfc8340>.

8.2.  Informative References

   [I-D.lindblad-netconf-transaction-id]
              Lindblad, J., "Transaction ID Mechanism for NETCONF",
              draft-lindblad-netconf-transaction-id-00 (work in
              progress), November 2020.

   [RFC8199]  Bogdanovic, D., Claise, B., and C. Moberg, "YANG Module
              Classification", RFC 8199, DOI 10.17487/RFC8199, July
              2017, <https://www.rfc-editor.org/info/rfc8199>.

   [RFC8309]  Wu, Q., Liu, W., and A. Farrel, "Service Models
              Explained", RFC 8309, DOI 10.17487/RFC8309, January 2018,
              <https://www.rfc-editor.org/info/rfc8309>.

Appendix A.  Changes between revisions

   Initial version

Acknowledgements

   ...

Authors' Addresses

   Benoit Claise
   Huawei

   Email: benoit.claise@huawei.com


   Jean Quilbeuf
   Huawei

   Email: jean.quilbeuf@huawei.com


   Jan Lindblad
   Cisco Systems

   Email: jlindbla@cisco.com






Claise, et al.          Expires November 17, 2022               [Page 8]
